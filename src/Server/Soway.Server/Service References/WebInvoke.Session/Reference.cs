//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Soway.Service.WebInvoke.Session {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionState", Namespace="http://schemas.datacontract.org/2004/07/Soway.Session")]
    public enum SessionState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Null = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeOut = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Removed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="www.cloud-social.com", ConfigurationName="WebInvoke.Session.session")]
    public interface session {
        
        [System.ServiceModel.OperationContractAttribute(Action="www.cloud-social.com/session/RegSession", ReplyAction="www.cloud-social.com/session/RegSessionResponse")]
        System.Guid RegSession(int TimeoutSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.cloud-social.com/session/RegSession", ReplyAction="www.cloud-social.com/session/RegSessionResponse")]
        System.Threading.Tasks.Task<System.Guid> RegSessionAsync(int TimeoutSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.cloud-social.com/session/CheckSession", ReplyAction="www.cloud-social.com/session/CheckSessionResponse")]
        Soway.Service.WebInvoke.Session.SessionState CheckSession(System.Guid sessionId, int TimeoutSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.cloud-social.com/session/CheckSession", ReplyAction="www.cloud-social.com/session/CheckSessionResponse")]
        System.Threading.Tasks.Task<Soway.Service.WebInvoke.Session.SessionState> CheckSessionAsync(System.Guid sessionId, int TimeoutSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.cloud-social.com/session/RemoveSession", ReplyAction="www.cloud-social.com/session/RemoveSessionResponse")]
        Soway.Service.WebInvoke.Session.SessionState RemoveSession(System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.cloud-social.com/session/RemoveSession", ReplyAction="www.cloud-social.com/session/RemoveSessionResponse")]
        System.Threading.Tasks.Task<Soway.Service.WebInvoke.Session.SessionState> RemoveSessionAsync(System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.cloud-social.com/session/ClearSession", ReplyAction="www.cloud-social.com/session/ClearSessionResponse")]
        Soway.Service.WebInvoke.Session.SessionState ClearSession();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.cloud-social.com/session/ClearSession", ReplyAction="www.cloud-social.com/session/ClearSessionResponse")]
        System.Threading.Tasks.Task<Soway.Service.WebInvoke.Session.SessionState> ClearSessionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface sessionChannel : Soway.Service.WebInvoke.Session.session, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class sessionClient : System.ServiceModel.ClientBase<Soway.Service.WebInvoke.Session.session>, Soway.Service.WebInvoke.Session.session {
        
        public sessionClient() {
        }
        
        public sessionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public sessionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public sessionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public sessionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid RegSession(int TimeoutSecond) {
            return base.Channel.RegSession(TimeoutSecond);
        }
        
        public System.Threading.Tasks.Task<System.Guid> RegSessionAsync(int TimeoutSecond) {
            return base.Channel.RegSessionAsync(TimeoutSecond);
        }
        
        public Soway.Service.WebInvoke.Session.SessionState CheckSession(System.Guid sessionId, int TimeoutSecond) {
            return base.Channel.CheckSession(sessionId, TimeoutSecond);
        }
        
        public System.Threading.Tasks.Task<Soway.Service.WebInvoke.Session.SessionState> CheckSessionAsync(System.Guid sessionId, int TimeoutSecond) {
            return base.Channel.CheckSessionAsync(sessionId, TimeoutSecond);
        }
        
        public Soway.Service.WebInvoke.Session.SessionState RemoveSession(System.Guid sessionId) {
            return base.Channel.RemoveSession(sessionId);
        }
        
        public System.Threading.Tasks.Task<Soway.Service.WebInvoke.Session.SessionState> RemoveSessionAsync(System.Guid sessionId) {
            return base.Channel.RemoveSessionAsync(sessionId);
        }
        
        public Soway.Service.WebInvoke.Session.SessionState ClearSession() {
            return base.Channel.ClearSession();
        }
        
        public System.Threading.Tasks.Task<Soway.Service.WebInvoke.Session.SessionState> ClearSessionAsync() {
            return base.Channel.ClearSessionAsync();
        }
    }
}
